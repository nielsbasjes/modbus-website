{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "https://modbus.basjes.nl/v1/ModbusSchema",
  "$ref": "#/definitions/Schema",
  "definitions": {
    "Schema": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string",
          "description": "The short description of the type of device that is schema is for."
        },
        "schemaFeatureLevel": {
          "type": "integer",
          "description": "To prepare for evolving the Schema capabilities the feature level of the schema, starting at 1."
        },
        "maxRegistersPerModbusRequest": {
          "type": "integer",
          "description": "Some devices do not allow fetching the full 125 registers at a time. This allows specifying that that limit."
        },
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Block"
          },
          "description": "All the Blocks of fields that make sense for this device."
        },
        "tests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Test"
          },
          "description": "The tests that allow verification if the implementation is able to correctly read all Fields."
        }
      },
      "required": [
        "description",
        "schemaFeatureLevel",
        "blocks"
      ],
      "title": "Modbus Schema",
      "description": "The Modbus Schema defines all there is for a device"
    },
    "Block": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "Each Block must have unique ID"
        },
        "description": {
          "type": "string",
          "description": "The description of what makes these Fields into this Block"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          },
          "description": "The list of all Fields of this Block. A Field is a single meaningful logical value that is calculated from the register values retrieved from the device."
        }
      },
      "required": [
        "id",
        "description",
        "fields"
      ],
      "title": "Modbus Schema Block",
      "description": "A Block is a grouping of Fields that are all in the same memory area in the Modbus Device."
    },
    "Field": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the field"
        },
        "description": {
          "type": "string",
          "description": "The description of the meaning of this Fields"
        },
        "immutable": {
          "type": "boolean",
          "description": "True if this Field will never change on a running system. If not specified this is False."
        },
        "system": {
          "type": "boolean",
          "description": "True if this Field does not hold a meaningful value by itself (often an intermediate for a calculation) and can be left out for the users of the data. If not specified this is False."
        },
        "expression": {
          "type": "string",
          "description": "The expression that defined the relation between the registers and the final value."
        },
        "unit": {
          "type": "string",
          "description": "The unit of the value produced by this Field (like Volt, Amps, Celsius, etc.)."
        },
        "fetchGroup": {
          "type": "string",
          "description": "Used to explicitly force the registers of multiple fields to be retrieved in a single Modbus request."
        }
      },
      "required": [
        "id",
        "expression"
      ],
      "title": "Field",
      "description": "A Field is a single meaningful logical value that is calculated from the register values retrieved from the device."
    },
    "Test": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of this test"
        },
        "description": {
          "type": "string",
          "description": "The description of this test."
        },
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestInput"
          },
          "description": "The input register blocks that are to be used by the tests."
        },
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestBlock"
          },
          "description": "The expected values for the Fields in the Blocks."
        }
      },
      "required": [
        "id",
        "input",
        "blocks"
      ],
      "title": "Test"
    },
    "TestBlock": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the Block for which the Fields need to be tested."
        },
        "expected": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": ["number", "string"]
            }
          },
          "description": "The expected value for each Field that needs to be tested. The expected value is always an ARRAY, an empty Array means no value should be returned, and Array with 1 or more values makes it that those values must be returned in the defined order."
        }
      },
      "required": [
        "id",
        "expected"
      ],
      "title": "TestBlock"
    },
    "TestInput": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "firstAddress": {
          "type": "string"
        },
        "rawValues": {
          "type": ["integer" ,"string"]
        }
      },
      "required": [
        "firstAddress",
        "rawValues"
      ],
      "title": "TestInput"
    }
  }
}
